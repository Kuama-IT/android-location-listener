buildscript {
    ext.kotlin_version = "1.5.0"
    repositories {
        google()

        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
        maven { url "https://maven.fabric.io/public" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:5.12.4"
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "maven-publish"
apply plugin: "com.diffplug.spotless"

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }

    }

    ext {
        artifactId = 'android-location-listener'
        groupId = 'net.kuama'
        compile_sdk_version = 33
        min_sdk_version = 22
        target_sdk_version = 33
        version_code = project.property("version_code").toInteger()
        version_name = project.property("version_name") as String
    }
}


android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode rootProject.ext.version_code
        versionName rootProject.ext.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.0"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "com.google.android.gms:play-services-location:21.0.1"

    implementation "io.reactivex.rxjava3:rxjava:3.1.6"

    // Notification
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "com.google.android.material:material:1.3.0"

    testImplementation "junit:junit:4.13.2"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3"
    testImplementation "io.mockk:mockk:1.11.0"

    testImplementation "io.reactivex.rxjava3:rxjava:3.0.13-RC2"
}

spotless {
    kotlin {
        target "**/*.kt"
        // EditorConfig support is broken: https://github.com/diffplug/spotless/issues/142
        ktlint("0.40.0").userData(["disabled_rules": "no-wildcard-imports,import-ordering,chain-wrapping"])
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.kotlin.srcDirs
    from android.sourceSets.main.java.srcDirs
    from fileTree(dir: 'src/libs', include: ['*.jar'])
    classifier "sources"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                // Adds javadocs and sources as separate jars.
                // artifact androidJavadocsJar
                artifact androidSourcesJar

                groupId rootProject.ext.groupId
                artifactId rootProject.ext.artifactId
                version project.property("version_name") as String

            }
        }
    }
}